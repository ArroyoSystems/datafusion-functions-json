name: CI

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request: {}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - id: cache-rust
      uses: Swatinem/rust-cache@v2

    - uses: pre-commit/action@v3.0.0
      with:
        extra_args: --all-files --verbose
      env:
        PRE_COMMIT_COLOR: always
        SKIP: test

  test:
    name: test rust-${{ matrix.rust-version }}
    strategy:
      fail-fast: false
      matrix:
        rust-version: [stable, nightly]

    runs-on: ubuntu-latest

    env:
      RUST_VERSION: ${{ matrix.rust-version }}

    steps:
    - uses: actions/checkout@v3

    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust-version }}

    - id: cache-rust
      uses: Swatinem/rust-cache@v2

    - uses: taiki-e/install-action@cargo-llvm-cov

    - run: cargo llvm-cov --all-features --lcov --output-path lcov.info

    - uses: codecov/codecov-action@v3
      with:
        files: lcov.info
        env_vars: RUST_VERSION

  # https://github.com/marketplace/actions/alls-green#why used for branch protection checks
  check:
    if: always()
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  release:
    needs: [check]
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    environment: release

    steps:
    - uses: actions/checkout@v2

    - name: install rust stable
      uses: dtolnay/rust-toolchain@stable

    - uses: Swatinem/rust-cache@v2

    - run: cargo publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
